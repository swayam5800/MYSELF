<%- include('../partials/header') -%> 
<div class="container-fluid">
    <div class="row"> 
        <div class="col-md-3 well">
            <iframe class="well" height="250" src="https://www.youtube.com/embed/yB57bcffJo4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            <iframe class="well" height="250" src="https://www.youtube.com/embed/9m2cdWorIq8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            <iframe class="well" height="250" src="https://www.youtube.com/embed/VdzljKA1WNA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
            <iframe class="well" height="250" src="https://www.youtube.com/embed/FBbHzy7v2Kg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
        <div class="col-md-8">
            <div class="jumbotron">
                <p style="text-align: center; font-family: 'Lexend Tera', sans-serif; font-size: 63px;">Sieve Therom</p>
            </div>
            <div class="jumbotron">
                <p style="font-size: 30px;">Algorithm</p>
                <hr>
                <p style="font-family: 'Alegreya', serif; font-size: 18px;">
                    A prime number is a natural number that has exactly two distinct natural number divisors: the number 1 and itself.

                    To find all the prime numbers less than or equal to a given integer n by Eratosthenes' method:<br>

                    1.Create a list of consecutive integers from 2 through n: (2, 3, 4, ..., n).<br>
                    2.Initially, let p equal 2, the smallest prime number.<br>
                    3.Enumerate the multiples of p by counting in increments of p from 2p to n, and mark them in the list (these will be 2p, 3p, 4p, ...; the p itself should not be marked).<br>
                    4.Find the first number greater than p in the list that is not marked. If there was no such number, stop. Otherwise, let p now equal this new number (which is the next prime), and repeat from step 3.<br>
                    5.When the algorithm terminates, the numbers remaining not marked in the list are all the primes below n.<br>
                    <br>
                </p>
            </div>
            <div class="jumbotron">

                <p style="font-size: 30px;">Code</p>
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#menu1">C++/C</a></li>
                    <li><a href="#menu3">Python</a></li>
                </ul>

                <div class="tab-content">
                    <div id="menu1" class="tab-pane fade in active">
                        <p style="font-size: 25px;">C++/C</p>
                        <p style="font-family: 'Alegreya', serif; font-size: 18px;">
                            void SieveOfEratosthenes(int n) <br>
                            {  </br>
                                bool prime[n+1]; </br>
                                memset(prime, true, sizeof(prime));</br> 
                            
                                for (int p=2; p*p<=n; p++) </br>
                                { </br>
                                    if (prime[p] == true) </br>
                                    { </br>
                                        // Update all multiples of p </br>
                                        for (int i=p*2; i<=n; i += p) </br>
                                            prime[i] = false; </br>
                                    } </br>
                                } </br>
                             </br>
                                for (int p=2; p<=n; p++) </br>
                                if (prime[p]) </br>
                                    cout << p << " "; </br>
                            } </br>
                        </p>
                    </div>
                    <div id="menu3" class="tab-pane fade">
                        <h3>Python</h3>
                        <p style="font-family: 'Alegreya', serif; font-size: 18px;">
                            def SieveOfEratosthenes(n): <br>
                            <br>
                            prime = [True for i in range(n+1)] <br>
                            p = 2
                            while (p * p <= n): <br>
                                <br>
                                # If prime[p] is not changed, then it is a prime <br>
                                if (prime[p] == True): <br>
                                    <br>
                                    # Update all multiples of p <br>
                                    for i in range(p * p, n+1, p): <br>
                                        prime[i] = False<br>
                                p += 1<br>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-1"></div>
    </div>
</div>
<%- include('../partials/footer') -%>